<div id="comments-list" class="w-100 d-flex flex-column text-start">
	{{#commentDtos}}
	<div class="card m-2" id="comments-{{id}}">
		<div class="card-header">
			{{nickname}}
			<!-- Button trigger modal -->
			<button type="button" class="btn btn-primary" 
			data-bs-toggle="modal" 
			data-bs-target="#comment-edit-modal"
			data-bs-id="{{id}}"
			data-bs-nickname="{{nickname}}"
			data-bs-body="{{body}}"
			data-bs-arti-id="{{articleId}}">
			수정</button>
			<!-- Button Del Comment -->
			<button type="button"
			class="btn btn-danger comment-delete-btn"
			data-comment-id="{{id}}">삭제</button>
		</div>
		<div class="card-body">		
			{{body}}
		</div>
	</div>
	{{/commentDtos}}
</div>
<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">댓글 수정</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form>
		  <div class="mb-3">
		    <label class="form-label">닉네임</label>
		    <input type="text" class="form-control" id="edit-comment-nickname">
		  </div>
		  <div class="mb-3">
		    <label class="form-label">내용</label>
		    <textarea class="form-control" id="edit-comment-body"></textarea>
		  </div>
		  {{#article}}
		  	<input type="hidden" id="edit-comment-id">
		  	<input type="hidden" id="edit-comment-arti-id">
		  {{/article}}
		  
		  <button type="button" class="btn btn-primary" id="comment-update-btn">Submit</button>
		</form>
      </div>
    </div>
  </div>
</div>
<!-- Modal Works -->
<script>
{
	// 모달 요소 선택
	const commitEditModal = document.querySelector("#comment-edit-modal");
	
	commitEditModal.addEventListener("show.bs.modal", function(event) {
		const triggerBtn = event.relatedTarget;
        // 2. 데이터 가져오기
        const id = triggerBtn.getAttribute("data-bs-id");
        const nickname = triggerBtn.getAttribute("data-bs-nickname");
        const body = triggerBtn.getAttribute("data-bs-body");
        const articleId = triggerBtn.getAttribute("data-bs-arti-id");
        // 3. 수정 폼에 데이터 반영
        document.querySelector("#edit-comment-nickname").value = nickname;
        document.querySelector("#edit-comment-body").value = body;
        document.querySelector("#edit-comment-id").value = id;
        document.querySelector("#edit-comment-arti-id").value = articleId;
	});
}
{
    // 수정 완료 버튼 선택
    const commentUpdateBtn = document.querySelector("#comment-update-btn");
    // 클릭 이벤트 처리
    commentUpdateBtn.addEventListener("click", function() {
        // 수정 댓글 객체 생성
        const comment = {
            id: document.querySelector("#edit-comment-id").value,
            nickname: document.querySelector("#edit-comment-nickname").value,
            body: document.querySelector("#edit-comment-body").value,
            article_id: document.querySelector("#edit-comment-arti-id").value
        };
        console.log(comment);
        // 수정 REST API 호출
        const url = "/api/comments/" + comment.id;
        fetch(url, {
            method: "PATCH", // PATCH 요청
            headers: { // 전송 데이터 타입(JSON) 정보
            "Content-Type": "application/json"
            },
            body: JSON.stringify(comment) //comment 객체를 JSON 문자열로 변환 전송
        }).then(response => {
            // HTTP 응답 코드에 따른 메시지 출력
            const msg = (response.ok) ? "댓글이 수정됐습니다." : "댓글 수정 실패..!";
            alert(msg);
            // 현재 페이지 새로 고침
            window.location.reload();
        });
    });
}
</script>
<!-- Del comment -->
<script>
{
	 const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
	 
	 commentDeleteBtns.forEach(btn => {
		 btn.addEventListener("click", (event) => {
			const commentDeleteBtn = event.target;
			
			const commentId = commentDeleteBtn.getAttribute("data-comment-id");
			console.log(`삭제 버튼 클릭: ${commentId}번 댓글`);
			
			const url = `/api/comments/${commentId}`;
			fetch(url, {
				method: "DELETE"
			}).then(response => {
				if (!response.ok) {
					alert("댓글 삭제 실패..!");
					return;
				}
				const msg = `${commentId}번 댓글을 삭제했습니다.`;
				alert(msg);
				
				window.location.reload();
			});
		 });
		 
	 });
	 
}
</script>